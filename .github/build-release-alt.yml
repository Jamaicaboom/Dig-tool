name: Build and Release with PyInstaller

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'v1.0'
        required: true
        default: 'v1.0'
      release_name:
        description: 'v1.0'
        required: true
        default: 'release v1.0'
      release_notes:
        description: 'release notes'
        required: false
        default: 'compiled with PyInstaller'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install opencv-python numpy Pillow keyboard pywin32 ahk pyinstaller

      - name: Build Executable with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name=DigTool --icon=assets/icon.ico --add-data="assets;assets" --add-binary="assets/AutoHotkey64.exe;." --add-data="ui_components.py;." --add-data="utils.py;." --add-data="settings.py;." --hidden-import=ahk main.py

      - name: Get executable name
        id: get_exe_name
        run: |
          $exeName = (Get-ChildItem -Path "dist" -Filter "*.exe" | Select-Object -First 1).Name
          echo "exe_name=$exeName" >> $env:GITHUB_OUTPUT
          echo "exe_path=dist/$exeName" >> $env:GITHUB_OUTPUT
        shell: powershell

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.release_notes }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_exe_name.outputs.exe_path }}
          asset_name: ${{ steps.get_exe_name.outputs.exe_name }}
          asset_content_type: application/octet-stream